{
  "name": "pico-w-go",
  "displayName": "Pico-W-Go",
  "description": "Autocompletion, remote Workspace and a REPL console for the Raspberry Pi Pico (W).",
  "version": "3.0.2",
  "publisher": "paulober",
  "license": "MPL-2.0",
  "homepage": "https://github.com/paulober/Pico-W-Go/blob/main/README.md",
  "bugs": {
    "url": "https://github.com/paulober/Pico-W-Go/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/paulober/Pico-W-Go"
  },
  "icon": "images/logo.png",
  "galleryBanner": {
    "color": "#ffffff",
    "theme": "light"
  },
  "engines": {
    "vscode": "^1.77.0",
    "node": ">=16.14.2"
  },
  "keywords": [
    "raspberry",
    "pi",
    "pico",
    "pico w",
    "raspberry pi pico",
    "raspberry pi pico w"
  ],
  "categories": [
    "Other"
  ],
  "capabilities": {
    "virtualWorkspaces": {
      "supported": false,
      "description": "Pico-W-Go does not support as first workspace a virtual one but contributes a virtual workspace for the Pico (W)."
    },
    "untrustedWorkspaces": {
      "supported": false,
      "description": "Why would you want to use Pico-W-Go in an untrusted workspace?"
    }
  },
  "activationEvents": [
    "workspaceContains:.picowgo",
    "onFileSystem:pico"
  ],
  "main": "./dist/extension.cjs",
  "os": [
    "win32",
    "darwin",
    "linux"
  ],
  "cpu": [
    "x64",
    "arm64",
    "arm"
  ],
  "minimumNodeVersion": 16,
  "contributes": {
    "commands": [
      {
        "command": "picowgo.connect",
        "title": "Pico-W-Go > Connect"
      },
      {
        "command": "picowgo.disconnect",
        "title": "Pico-W-Go > Disconnect"
      },
      {
        "command": "picowgo.initialise",
        "title": "Pico-W-Go > Configure project"
      },
      {
        "command": "picowgo.upload",
        "title": "Pico-W-Go > Upload project"
      },
      {
        "command": "picowgo.uploadFile",
        "title": "Pico-W-Go > Upload current file",
        "enablement": "resourceScheme != pico && isFileSystemResource"
      },
      {
        "command": "picowgo.download",
        "title": "Pico-W-Go > Download project"
      },
      {
        "command": "picowgo.run",
        "title": "Pico-W-Go > Run current file",
        "enablement": "resourceScheme != pico && isFileSystemResource && editorLangId == python && resourceExtname == .py"
      },
      {
        "command": "picowgo.remote.run",
        "title": "Pico-W-Go > Remote > Run current file",
        "enablement": "resourceScheme == pico && isFileSystemResource && editorLangId == python && resourceExtname == .py"
      },
      {
        "command": "picowgo.runselection",
        "title": "Pico-W-Go > Run current selection",
        "enablement": "!inQuickOpen && !listFocus && isFileSystemResource && editorLangId == python"
      },
      {
        "command": "picowgo.deleteAllFiles",
        "title": "Pico-W-Go > Delete all files from board"
      },
      {
        "command": "picowgo.globalSettings",
        "title": "Pico-W-Go > Global settings"
      },
      {
        "command": "picowgo.reset.soft",
        "title": "Pico-W-Go > Reset > Soft"
      },
      {
        "command": "picowgo.reset.hard",
        "title": "Pico-W-Go > Reset > Hard"
      },
      {
        "command": "picowgo.help",
        "title": "Pico-W-Go > Help > Getting started"
      },
      {
        "command": "picowgo.extra.pins",
        "title": "Pico-W-Go > Help > Show Pico Pin Map"
      },
      {
        "command": "picowgo.extra.getSerial",
        "title": "Pico-W-Go > Help > List serial ports"
      },
      {
        "command": "picowgo.extra.firmwareUpdates",
        "title": "Pico-W-Go > Help > Check for firmware updates"
      },
      {
        "command": "picowgo.listCommands",
        "title": "Pico-W-Go > List all Commands"
      },
      {
        "command": "picowgo.toggleFileSystem",
        "title": "Pico-W-Go > Toggle Virtual File System (closes existing vREPLs)"
      },
      {
        "command": "picowgo.switchPico",
        "title": "Pico-W-Go > Switch Pico"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "picowgo.upload",
          "group": "picowgo",
          "when": "resourceScheme != pico"
        },
        {
          "command": "picowgo.download",
          "group": "picowgo",
          "when": "resourceScheme == pico"
        },
        {
          "command": "picowgo.run",
          "group": "picowgo",
          "when": "resourceScheme != pico"
        }
      ],
      "editor/context": [
        {
          "command": "picowgo.run",
          "group": "picowgo",
          "when": "resourceScheme != pico"
        },
        {
          "command": "picowgo.remote.run",
          "group": "picowgo",
          "when": "resourceScheme == pico"
        },
        {
          "command": "picowgo.runselection",
          "group": "picowgo"
        },
        {
          "command": "picowgo.uploadFile",
          "group": "picowgo",
          "when": "resourceScheme != pico"
        }
      ],
      "editor/title": [
        {
          "command": "picowgo.run",
          "group": "picowgo",
          "when": "resourceScheme != pico"
        },
        {
          "command": "picowgo.remote.run",
          "group": "picowgo",
          "when": "resourceScheme == pico"
        },
        {
          "command": "picowgo.upload",
          "group": "picowgo",
          "when": "resourceScheme != pico"
        }
      ]
    },
    "configuration": {
      "title": "Pico-W-Go",
      "properties": {
        "picowgo.autoConnect": {
          "type": "boolean",
          "default": true,
          "title": "Autoconnect on USB",
          "description": "Ignores any 'device address' setting and automatically connects to the top item in the serialport list.",
          "order": 2
        },
        "picowgo.manualComDevice": {
          "type": "string",
          "default": "",
          "title": "Manual COM device",
          "description": "If autoConnect is set to false Pico-W-Go will automatically connect to the serial port specified here.",
          "order": 3
        },
        "picowgo.syncFolder": {
          "type": "string",
          "default": "",
          "title": "Sync Folder",
          "description": "This folder will be uploaded to the pyboard when using the sync button. Leave empty to sync the complete project. (only allows folders within the project). Use a path relative to the project you opened in vscode, without leading or trailing slash",
          "order": 4
        },
        "picowgo.syncAllFileTypes": {
          "type": "boolean",
          "default": false,
          "title": "Upload all file types",
          "description": "If enabled, all files will be uploaded no matter the file type. The list of file types below will be ignored",
          "order": 5
        },
        "picowgo.syncFileTypes": {
          "type": "array",
          "default": [
            "py",
            "txt",
            "log",
            "json",
            "xml",
            "html",
            "js",
            "css",
            "mpy"
          ],
          "title": "Upload file types",
          "description": "All types of files that will be uploaded to the board, seperated by comma. All other filetypes will be ignored during an upload (or download) action",
          "order": 6
        },
        "picowgo.pyIgnore": {
          "title": "Pyignore list",
          "description": "Comma separated list of files and folders to ignore when uploading relative to syncFolder (no wildcard or regular expressions supported)",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            ".picowgo",
            ".vscode",
            ".gitignore",
            ".git",
            "project.pico-go",
            "env",
            "venv"
          ],
          "order": 7
        },
        "picowgo.openOnStart": {
          "type": "boolean",
          "default": false,
          "title": "Open on start",
          "description": "Automatically open the Pico-W-Go console after starting VS Code. Could cause random terminal freezes on Linux.",
          "order": 8
        },
        "picowgo.statusbarButtons": {
          "type": "array",
          "title": "Statusbar buttons",
          "description": "Select which buttons to show in the statusbar",
          "items": {
            "type": "string"
          },
          "default": [
            "status",
            "run",
            "softreset"
          ],
          "order": 9
        },
        "picowgo.gcBeforeUpload": {
          "type": "boolean",
          "default": false,
          "title": "Garbage collection before upload",
          "description": "[Only works with firmware v1.16.0.b1 and up.] Run garbage collection before uploading files to the board. This will free up some memory usefull when uploading large files but adds about a second or two to the upload process.",
          "order": 10
        },
        "picowgo.rebootAfterUpload": {
          "type": "boolean",
          "default": true,
          "title": "Reboot after upload",
          "description": "Reboots your board after any upload action.",
          "order": 11
        },
        "picowgo.pythonPath": {
          "type": "string",
          "default": null,
          "title": "Python Path",
          "description": "Path to the Python interpreter. Default for Windows is 'python.exe' and 'python3' for Linux and MacOS.",
          "order": 12
        }
      }
    },
    "terminal": {
      "profiles": [
        {
          "title": "Pico (W) vREPL",
          "id": "picowgo.vrepl"
        }
      ]
    }
  },
  "statusBar": [
    {
      "key": "status",
      "name": "",
      "command": "picowgo.toggleConnect",
      "tooltip": "Toggle board connection"
    },
    {
      "key": "stop",
      "name": "$(primitive-square) Stop",
      "command": "picowgo.universalStop",
      "tooltip": "Stop"
    },
    {
      "key": "run",
      "name": "$(play) Run",
      "command": "picowgo.run",
      "tooltip": "Run current file"
    },
    {
      "key": "runselection",
      "name": "$(play) Run Line",
      "command": "picowgo.runselection",
      "tooltip": "Run current line"
    },
    {
      "key": "upload",
      "name": "$(triangle-up) Upload",
      "command": "picowgo.uploadFile",
      "tooltip": "Upload current file to your board"
    },
    {
      "key": "download",
      "name": "$(triangle-down) Download",
      "command": "picowgo.download",
      "tooltip": "Download project from your board. This will overwrite all files in the sync folder."
    },
    {
      "key": "disconnect",
      "name": "$(chrome-close) Disconnect",
      "command": "picowgo.disconnect",
      "tooltip": "Disconnect"
    },
    {
      "key": "softreset",
      "name": "$(refresh) Reset",
      "command": "picowgo.reset.soft",
      "tooltip": "Restart your board"
    },
    {
      "key": "settings",
      "name": "$(gear) Settings",
      "command": "picowgo.globalSettings",
      "tooltip": "Global Pico-W-Go settings"
    },
    {
      "key": "listserial",
      "name": "$(list-unordered) List serialports",
      "command": "picowgo.extra.getSerial",
      "tooltip": "List available serialports"
    },
    {
      "key": "listcommands",
      "name": "$(list-unordered) All commands",
      "command": "picowgo.listCommands",
      "tooltip": "List all available Pico-W-Go commands"
    }
  ],
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "rollup -c",
    "watch": "rollup -cw",
    "package": "rollup -c --environment BUILD:production --sourcemap hidden",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@rollup/plugin-commonjs": "^24.0.1",
    "@rollup/plugin-node-resolve": "^15.0.2",
    "@rollup/plugin-terser": "^0.4.0",
    "@rollup/plugin-typescript": "^11.1.0",
    "@types/fs-extra": "^11.0.1",
    "@types/lodash": "^4.14.192",
    "@types/mocha": "^10.0.1",
    "@types/node": "^16.x",
    "@types/uuid": "^9.0.1",
    "@types/vscode": "^1.77.0",
    "@typescript-eslint/eslint-plugin": "^5.57.1",
    "@typescript-eslint/parser": "^5.57.1",
    "@vscode/test-electron": "^2.3.0",
    "eslint": "^8.37.0",
    "eslint-config-prettier": "^8.8.0",
    "glob": "^9.3.4",
    "mocha": "^10.2.0",
    "rollup": "^3.20.2",
    "rollup-plugin-copy": "^3.4.0",
    "typescript": "^5.0.4"
  },
  "dependencies": {
    "@paulober/pyboard-serial-com": "^1.4.22",
    "fs-extra": "^11.1.1",
    "lodash": "^4.17.21",
    "uuid": "^9.0.0"
  }
}
